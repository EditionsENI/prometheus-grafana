livedebugging {
  enabled = true
}

otelcol.receiver.otlp "default" {
  http {}
  output {
    traces  = [otelcol.processor.batch.default.input]
  }
}

otelcol.processor.batch "default" {
  output {
    traces  = [otelcol.exporter.otlp.tempo.input, otelcol.connector.servicegraph.default.input, otelcol.connector.spanmetrics.default.input]
  }
}

otelcol.connector.spanmetrics "default" {
  metrics_flush_interval = "15s"
  metrics_expiration = "5m"
  namespace = "traces_spanmetrics"
  histogram {
    exponential {}
    unit = "s"
  }
  exemplars {
    enabled = true
  }
  output {
    metrics = [otelcol.exporter.prometheus.default.input]
  }
}

otelcol.connector.servicegraph "default" {
  dimensions = ["service.name"]
  output {
    metrics = [otelcol.exporter.prometheus.default.input]
  }
}

otelcol.exporter.prometheus "default" {
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.remote_write "default" {
  endpoint {
    url = "http://localhost:9090/api/v1/write"
    send_native_histograms = true
  }
}

otelcol.exporter.otlp "tempo" {
  client {
    endpoint = "localhost:4317"
    tls {
      insecure             = true
      insecure_skip_verify = true
    }
  }
}

loki.process "systemd_journal" {
  forward_to = [loki.write.default.receiver]

  stage.match {
    selector = "{job=\"systemd-journal\"}"

    stage.metrics { }
  }
}

discovery.relabel "systemd_journal" {
  targets = []

  rule {
    source_labels = ["__journal__hostname"]
    target_label  = "host"
  }

  rule {
    source_labels = ["__journal__systemd_unit"]
    regex         = "(.+)"
    target_label  = "systemd_unit"
  }

  rule {
    source_labels = ["__journal__systemd_user_unit"]
    regex         = "(.+)"
    target_label  = "systemd_user_unit"
  }

  rule {
    source_labels = ["__journal__transport"]
    regex         = "(.+)"
    target_label  = "transport"
  }

  rule {
    source_labels = ["__journal_priority_keyword"]
    regex         = "(.+)"
    target_label  = "severity"
  }
}

loki.source.journal "systemd_journal" {
  path          = "/var/log/journal"
  relabel_rules = discovery.relabel.systemd_journal.rules
  forward_to    = [loki.process.systemd_journal.receiver]
  labels        = {
    job = "systemd-journal",
  }
}

loki.write "default" {
  endpoint {
    url = "http://localhost:3100/loki/api/v1/push"
  }
  external_labels = {}
}

