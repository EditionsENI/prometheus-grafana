apiVersion: 1

datasources:
  - name: Prometheus
    type: prometheus
    uid: prometheus
    access: proxy
    url: http://localhost:9090
    isDefault: true
    jsonData:
      exemplarTraceIdDestinations:
        - name: traceID
          datasourceUid: tempo
        - name: trace_id
          datasourceUid: tempo
  - name: Loki
    type: loki
    uid: loki
    access: proxy
    url: http://localhost:3100
    jsonData:
      maxLines: 1000
      derivedFields:
        - name: traceID
          matcherRegex: 'trace id: ([0-9a-fA-F-]{16,})'
          url: '$${__value.raw}'
          datasourceUid: tempo
  - name: Tempo
    type: tempo
    uid: tempo
    access: proxy
    url: http://localhost:3200
    isDefault: false
    jsonData:
      tracesToLogsV2:
        datasourceUid: 'loki'
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        # filterByTraceID: true
        # filterBySpanID: false
        customQuery: true
        query: '{job!="",systemd_unit!~"(tempo|loki|grafana-server).service"} |~ "$${__trace.traceId}|$${__span.spanId}"'
      tracesToMetrics:
        datasourceUid: 'prometheus'
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        tags: [{ key: 'service.name', value: 'service' }]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
      serviceMap:
        datasourceUid: 'prometheus'
      nodeGraph:
        enabled: true


